<FluentStack Orientation="Orientation.Vertical">

    <!-- Start Date Input -->
    <FluentDatePicker Label="Start Date" AriaLabel="To" @bind-Value="@StartDate" />

    <!-- End Date Input -->
    <FluentDatePicker Label="End Date" AriaLabel="To" @bind-Value="@EndDate" />

    <!-- Apply Button -->
    <FluentStack HorizontalAlignment="HorizontalAlignment.End">
        <!-- Button with Search Icon -->
        <FluentButton Appearance="Appearance.Lightweight" @onclick=HandleSearch>
            <FluentIcon Value="@(new LuvalIcons.SearchIcon())" />
        </FluentButton>
        <FluentButton Appearance="Appearance.Lightweight" @onclick=OnClear>
            <FluentIcon Value="@(new LuvalIcons.XMarkIcon())" />
        </FluentButton>
    </FluentStack>
</FluentStack>

@code {
    [Parameter]
    public DateTime? StartDate { get; set; } = DateTime.Now;

    [Parameter]
    public DateTime? EndDate { get; set; } = DateTime.Now;

    [Parameter]
    public EventCallback<(DateTime? Start, DateTime? End)> OnSearchClicked { get; set; }

    [Parameter]
    public EventCallback OnClearClicked { get; set; }

    private async Task HandleSearch()
    {
        if (OnSearchClicked.HasDelegate)
            await OnSearchClicked.InvokeAsync((StartDate, EndDate));
    }

    public async Task OnClear()
    {
        if (OnClearClicked.HasDelegate)
            await OnClearClicked.InvokeAsync();
    }
}

