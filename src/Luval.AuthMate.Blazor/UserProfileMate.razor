@using Luval.AuthMate.Core.Entities
@using Microsoft.AspNetCore.Http
@using System.Text.RegularExpressions

@inject NavigationManager Navigation
@inject IHttpContextAccessor context

<FluentProfileMenu Image="@_user?.ProfilePictureUrl"
                   HeaderLabel="@HeaderLabel"
                   Initials="@_user?.GetDisplayNameInitials()"
                   FullName="@_user?.DisplayName"
                   EMail="@_user?.Email"
                   FooterLink="@FooterLink"
                   HeaderButton="@HeaderButton"
                   OnHeaderButtonClick="DoSingout"
                   OnFooterLinkClick="GoToAccount"
                   PopoverStyle="@PopoverStyle" />

@code {

    /// <summary>
    /// The url that will trigger the session to logout
    /// </summary>
    [Parameter]
    public string SignoutNavigateTo { get; set; } = "/auth/logout";
    /// <summary>
    /// The page where the user profile information will be shown
    /// </summary>
    [Parameter]
    public string AccountNavigateTo { get; set; } = "/profile";
    /// <summary>
    /// The label for the header section
    /// </summary>
    [Parameter]
    public string HeaderLabel { get; set; } = "Account Information";
    /// <summary>
    /// The text for the footer link
    /// </summary>
    [Parameter]
    public string FooterLink { get; set; } = "View Account";
    /// <summary>
    /// The text for the header button
    /// </summary>
    [Parameter]
    public string HeaderButton { get; set; } = "Signout";
    /// <summary>
    /// The style for the popover
    /// </summary>
    [Parameter]
    public string PopoverStyle { get; set; } = "min-width: 330px;";

    private AppUser _user;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        if (_user != null) return;
        if (context.HttpContext != null &&
            context.HttpContext.User != null &&
           context.HttpContext.User.Identity != null &&
           context.HttpContext.User.Identity.IsAuthenticated)
        {
            _user = context.HttpContext.User.ToUser();

        }
    }

    private void DoSingout()
    {
        Navigation.NavigateTo(SignoutNavigateTo);
    }

    private void GoToAccount()
    {
        Navigation.NavigateTo(AccountNavigateTo);
    }
}
